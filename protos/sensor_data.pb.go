// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: sensor_data.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Platform int32

const (
	Platform_PLATFORM_UNUSED  Platform = 0
	Platform_PLATFORM_WINDOWS Platform = 1
	Platform_PLATFORM_OSX     Platform = 2
	Platform_PLATFORM_LINUX   Platform = 3
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "PLATFORM_UNUSED",
		1: "PLATFORM_WINDOWS",
		2: "PLATFORM_OSX",
		3: "PLATFORM_LINUX",
	}
	Platform_value = map[string]int32{
		"PLATFORM_UNUSED":  0,
		"PLATFORM_WINDOWS": 1,
		"PLATFORM_OSX":     2,
		"PLATFORM_LINUX":   3,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_data_proto_enumTypes[0].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_sensor_data_proto_enumTypes[0]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_sensor_data_proto_rawDescGZIP(), []int{0}
}

type DataType int32

const (
	DataType_DATA_TYPE_UNKNOWN    DataType = 0
	DataType_DATA_TYPE_EXE        DataType = 1
	DataType_DATA_TYPE_DLL        DataType = 2
	DataType_DATA_TYPE_MS_WORD    DataType = 3
	DataType_DATA_TYPE_MS_EXCEL   DataType = 4
	DataType_DATA_TYPE_MS_PPT     DataType = 5
	DataType_DATA_TYPE_MS_MACRO   DataType = 6
	DataType_DATA_TYPE_MS_UNKNOWN DataType = 7
	DataType_DATA_TYPE_MACHO      DataType = 8
	DataType_DATA_TYPE_ELF        DataType = 9
	DataType_DATA_TYPE_PDF        DataType = 10
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "DATA_TYPE_UNKNOWN",
		1:  "DATA_TYPE_EXE",
		2:  "DATA_TYPE_DLL",
		3:  "DATA_TYPE_MS_WORD",
		4:  "DATA_TYPE_MS_EXCEL",
		5:  "DATA_TYPE_MS_PPT",
		6:  "DATA_TYPE_MS_MACRO",
		7:  "DATA_TYPE_MS_UNKNOWN",
		8:  "DATA_TYPE_MACHO",
		9:  "DATA_TYPE_ELF",
		10: "DATA_TYPE_PDF",
	}
	DataType_value = map[string]int32{
		"DATA_TYPE_UNKNOWN":    0,
		"DATA_TYPE_EXE":        1,
		"DATA_TYPE_DLL":        2,
		"DATA_TYPE_MS_WORD":    3,
		"DATA_TYPE_MS_EXCEL":   4,
		"DATA_TYPE_MS_PPT":     5,
		"DATA_TYPE_MS_MACRO":   6,
		"DATA_TYPE_MS_UNKNOWN": 7,
		"DATA_TYPE_MACHO":      8,
		"DATA_TYPE_ELF":        9,
		"DATA_TYPE_PDF":        10,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_data_proto_enumTypes[1].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_sensor_data_proto_enumTypes[1]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_sensor_data_proto_rawDescGZIP(), []int{1}
}

type SensorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string   `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Platform       Platform `protobuf:"varint,2,opt,name=platform,proto3,enum=protos.sensor_data.Platform" json:"platform,omitempty"`
	DataType       DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=protos.sensor_data.DataType" json:"data_type,omitempty"`
	Data           []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Sha256         string   `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
	EventTimestamp string   `protobuf:"bytes,6,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
}

func (x *SensorData) Reset() {
	*x = SensorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensor_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorData) ProtoMessage() {}

func (x *SensorData) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorData.ProtoReflect.Descriptor instead.
func (*SensorData) Descriptor() ([]byte, []int) {
	return file_sensor_data_proto_rawDescGZIP(), []int{0}
}

func (x *SensorData) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SensorData) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_PLATFORM_UNUSED
}

func (x *SensorData) GetDataType() DataType {
	if x != nil {
		return x.DataType
	}
	return DataType_DATA_TYPE_UNKNOWN
}

func (x *SensorData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SensorData) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *SensorData) GetEventTimestamp() string {
	if x != nil {
		return x.EventTimestamp
	}
	return ""
}

var File_sensor_data_proto protoreflect.FileDescriptor

var file_sensor_data_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf7, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2a, 0x5b, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x54,
	0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4f, 0x53, 0x58, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c,
	0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x03, 0x2a, 0xf9,
	0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x45, 0x58, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x53, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x53, 0x5f,
	0x45, 0x58, 0x43, 0x45, 0x4c, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x53, 0x5f, 0x50, 0x50, 0x54, 0x10, 0x05, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x53, 0x5f, 0x4d, 0x41,
	0x43, 0x52, 0x4f, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x07, 0x12,
	0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x43,
	0x48, 0x4f, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x4c, 0x46, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x44, 0x46, 0x10, 0x0a, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sensor_data_proto_rawDescOnce sync.Once
	file_sensor_data_proto_rawDescData = file_sensor_data_proto_rawDesc
)

func file_sensor_data_proto_rawDescGZIP() []byte {
	file_sensor_data_proto_rawDescOnce.Do(func() {
		file_sensor_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_sensor_data_proto_rawDescData)
	})
	return file_sensor_data_proto_rawDescData
}

var file_sensor_data_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sensor_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sensor_data_proto_goTypes = []interface{}{
	(Platform)(0),      // 0: protos.sensor_data.Platform
	(DataType)(0),      // 1: protos.sensor_data.DataType
	(*SensorData)(nil), // 2: protos.sensor_data.SensorData
}
var file_sensor_data_proto_depIdxs = []int32{
	0, // 0: protos.sensor_data.SensorData.platform:type_name -> protos.sensor_data.Platform
	1, // 1: protos.sensor_data.SensorData.data_type:type_name -> protos.sensor_data.DataType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sensor_data_proto_init() }
func file_sensor_data_proto_init() {
	if File_sensor_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sensor_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sensor_data_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sensor_data_proto_goTypes,
		DependencyIndexes: file_sensor_data_proto_depIdxs,
		EnumInfos:         file_sensor_data_proto_enumTypes,
		MessageInfos:      file_sensor_data_proto_msgTypes,
	}.Build()
	File_sensor_data_proto = out.File
	file_sensor_data_proto_rawDesc = nil
	file_sensor_data_proto_goTypes = nil
	file_sensor_data_proto_depIdxs = nil
}
